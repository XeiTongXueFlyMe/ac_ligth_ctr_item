ARM GAS  /tmp/ccmauE6Y.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32f1xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NMI_Handler,"ax",%progbits
  20              		.align	2
  21              		.global	NMI_Handler
  22              		.thumb
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB65:
  27              		.file 1 "Startup/Src/stm32f1xx_it.c"
   1:Startup/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Startup/Src/stm32f1xx_it.c **** /**
   3:Startup/Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Startup/Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Startup/Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Startup/Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Startup/Src/stm32f1xx_it.c ****   * @attention
   8:Startup/Src/stm32f1xx_it.c ****   *
   9:Startup/Src/stm32f1xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Startup/Src/stm32f1xx_it.c ****   * All rights reserved.</center></h2>
  11:Startup/Src/stm32f1xx_it.c ****   *
  12:Startup/Src/stm32f1xx_it.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Startup/Src/stm32f1xx_it.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Startup/Src/stm32f1xx_it.c ****   * the License. You may obtain a copy of the License at:
  15:Startup/Src/stm32f1xx_it.c ****   *                             www.st.com/SLA0044
  16:Startup/Src/stm32f1xx_it.c ****   *
  17:Startup/Src/stm32f1xx_it.c ****   ******************************************************************************
  18:Startup/Src/stm32f1xx_it.c ****   */
  19:Startup/Src/stm32f1xx_it.c **** /* USER CODE END Header */
  20:Startup/Src/stm32f1xx_it.c **** 
  21:Startup/Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Startup/Src/stm32f1xx_it.c **** #include "main.h"
  23:Startup/Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  24:Startup/Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Startup/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  26:Startup/Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  27:Startup/Src/stm32f1xx_it.c **** 
  28:Startup/Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Startup/Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  30:Startup/Src/stm32f1xx_it.c **** 
  31:Startup/Src/stm32f1xx_it.c **** /* USER CODE END TD */
ARM GAS  /tmp/ccmauE6Y.s 			page 2


  32:Startup/Src/stm32f1xx_it.c **** 
  33:Startup/Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Startup/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  35:Startup/Src/stm32f1xx_it.c ****  
  36:Startup/Src/stm32f1xx_it.c **** /* USER CODE END PD */
  37:Startup/Src/stm32f1xx_it.c **** 
  38:Startup/Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Startup/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  40:Startup/Src/stm32f1xx_it.c **** 
  41:Startup/Src/stm32f1xx_it.c **** /* USER CODE END PM */
  42:Startup/Src/stm32f1xx_it.c **** 
  43:Startup/Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Startup/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  45:Startup/Src/stm32f1xx_it.c **** 
  46:Startup/Src/stm32f1xx_it.c **** /* USER CODE END PV */
  47:Startup/Src/stm32f1xx_it.c **** 
  48:Startup/Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Startup/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  50:Startup/Src/stm32f1xx_it.c **** 
  51:Startup/Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  52:Startup/Src/stm32f1xx_it.c **** 
  53:Startup/Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Startup/Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  55:Startup/Src/stm32f1xx_it.c **** 
  56:Startup/Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  57:Startup/Src/stm32f1xx_it.c **** 
  58:Startup/Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Startup/Src/stm32f1xx_it.c **** 
  60:Startup/Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  61:Startup/Src/stm32f1xx_it.c **** 
  62:Startup/Src/stm32f1xx_it.c **** /* USER CODE END EV */
  63:Startup/Src/stm32f1xx_it.c **** 
  64:Startup/Src/stm32f1xx_it.c **** /******************************************************************************/
  65:Startup/Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */ 
  66:Startup/Src/stm32f1xx_it.c **** /******************************************************************************/
  67:Startup/Src/stm32f1xx_it.c **** /**
  68:Startup/Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  69:Startup/Src/stm32f1xx_it.c ****   */
  70:Startup/Src/stm32f1xx_it.c **** void NMI_Handler(void)
  71:Startup/Src/stm32f1xx_it.c **** {
  28              		.loc 1 71 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE65:
  37 0002 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  38              		.align	2
  39              		.global	MemManage_Handler
  40              		.thumb
  41              		.thumb_func
  43              	MemManage_Handler:
  44              	.LFB66:
  72:Startup/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  73:Startup/Src/stm32f1xx_it.c **** 
ARM GAS  /tmp/ccmauE6Y.s 			page 3


  74:Startup/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  75:Startup/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  76:Startup/Src/stm32f1xx_it.c **** 
  77:Startup/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  78:Startup/Src/stm32f1xx_it.c **** }
  79:Startup/Src/stm32f1xx_it.c **** 
  80:Startup/Src/stm32f1xx_it.c **** /**
  81:Startup/Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
  82:Startup/Src/stm32f1xx_it.c ****   */
  83:Startup/Src/stm32f1xx_it.c **** void MemManage_Handler(void)
  84:Startup/Src/stm32f1xx_it.c **** {
  45              		.loc 1 84 0
  46              		.cfi_startproc
  47              		@ Volatile: function does not return.
  48              		@ args = 0, pretend = 0, frame = 0
  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              		@ link register save eliminated.
  51              	.L3:
  52 0000 FEE7     		b	.L3
  53              		.cfi_endproc
  54              	.LFE66:
  56 0002 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
  57              		.align	2
  58              		.global	BusFault_Handler
  59              		.thumb
  60              		.thumb_func
  62              	BusFault_Handler:
  63              	.LFB67:
  85:Startup/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  86:Startup/Src/stm32f1xx_it.c **** 
  87:Startup/Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
  88:Startup/Src/stm32f1xx_it.c ****   while (1)
  89:Startup/Src/stm32f1xx_it.c ****   {
  90:Startup/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
  91:Startup/Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
  92:Startup/Src/stm32f1xx_it.c ****   }
  93:Startup/Src/stm32f1xx_it.c **** }
  94:Startup/Src/stm32f1xx_it.c **** 
  95:Startup/Src/stm32f1xx_it.c **** /**
  96:Startup/Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
  97:Startup/Src/stm32f1xx_it.c ****   */
  98:Startup/Src/stm32f1xx_it.c **** void BusFault_Handler(void)
  99:Startup/Src/stm32f1xx_it.c **** {
  64              		.loc 1 99 0
  65              		.cfi_startproc
  66              		@ Volatile: function does not return.
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              		@ link register save eliminated.
  70              	.L5:
  71 0000 FEE7     		b	.L5
  72              		.cfi_endproc
  73              	.LFE67:
  75 0002 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
  76              		.align	2
  77              		.global	UsageFault_Handler
  78              		.thumb
ARM GAS  /tmp/ccmauE6Y.s 			page 4


  79              		.thumb_func
  81              	UsageFault_Handler:
  82              	.LFB68:
 100:Startup/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 101:Startup/Src/stm32f1xx_it.c **** 
 102:Startup/Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 103:Startup/Src/stm32f1xx_it.c ****   while (1)
 104:Startup/Src/stm32f1xx_it.c ****   {
 105:Startup/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 106:Startup/Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 107:Startup/Src/stm32f1xx_it.c ****   }
 108:Startup/Src/stm32f1xx_it.c **** }
 109:Startup/Src/stm32f1xx_it.c **** 
 110:Startup/Src/stm32f1xx_it.c **** /**
 111:Startup/Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 112:Startup/Src/stm32f1xx_it.c ****   */
 113:Startup/Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 114:Startup/Src/stm32f1xx_it.c **** {
  83              		.loc 1 114 0
  84              		.cfi_startproc
  85              		@ Volatile: function does not return.
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  89              	.L7:
  90 0000 FEE7     		b	.L7
  91              		.cfi_endproc
  92              	.LFE68:
  94 0002 00BF     		.section	.text.SVC_Handler,"ax",%progbits
  95              		.align	2
  96              		.global	SVC_Handler
  97              		.thumb
  98              		.thumb_func
 100              	SVC_Handler:
 101              	.LFB69:
 115:Startup/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 116:Startup/Src/stm32f1xx_it.c **** 
 117:Startup/Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 118:Startup/Src/stm32f1xx_it.c ****   while (1)
 119:Startup/Src/stm32f1xx_it.c ****   {
 120:Startup/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 121:Startup/Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 122:Startup/Src/stm32f1xx_it.c ****   }
 123:Startup/Src/stm32f1xx_it.c **** }
 124:Startup/Src/stm32f1xx_it.c **** 
 125:Startup/Src/stm32f1xx_it.c **** /**
 126:Startup/Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 127:Startup/Src/stm32f1xx_it.c ****   */
 128:Startup/Src/stm32f1xx_it.c **** void SVC_Handler(void)
 129:Startup/Src/stm32f1xx_it.c **** {
 102              		.loc 1 129 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107 0000 7047     		bx	lr
 108              		.cfi_endproc
ARM GAS  /tmp/ccmauE6Y.s 			page 5


 109              	.LFE69:
 111 0002 00BF     		.section	.text.DebugMon_Handler,"ax",%progbits
 112              		.align	2
 113              		.global	DebugMon_Handler
 114              		.thumb
 115              		.thumb_func
 117              	DebugMon_Handler:
 118              	.LFB70:
 130:Startup/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 131:Startup/Src/stm32f1xx_it.c **** 
 132:Startup/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 133:Startup/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 134:Startup/Src/stm32f1xx_it.c **** 
 135:Startup/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 136:Startup/Src/stm32f1xx_it.c **** }
 137:Startup/Src/stm32f1xx_it.c **** 
 138:Startup/Src/stm32f1xx_it.c **** /**
 139:Startup/Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 140:Startup/Src/stm32f1xx_it.c ****   */
 141:Startup/Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 142:Startup/Src/stm32f1xx_it.c **** {
 119              		.loc 1 142 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              		@ link register save eliminated.
 124 0000 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE70:
 128 0002 00BF     		.text
 129              	.Letext0:
 130              		.file 2 "rt_thread/components/libc/compilers/minilibc/stdint.h"
 131              		.file 3 "Drivers/CMSIS/Include/core_cm3.h"
ARM GAS  /tmp/ccmauE6Y.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_it.c
     /tmp/ccmauE6Y.s:20     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccmauE6Y.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccmauE6Y.s:38     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccmauE6Y.s:43     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccmauE6Y.s:57     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccmauE6Y.s:62     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccmauE6Y.s:76     .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccmauE6Y.s:81     .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccmauE6Y.s:95     .text.SVC_Handler:0000000000000000 $t
     /tmp/ccmauE6Y.s:100    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccmauE6Y.s:112    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccmauE6Y.s:117    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
